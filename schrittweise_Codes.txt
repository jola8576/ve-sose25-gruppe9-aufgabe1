

RTEMS Umgebung installieren

Schritt 1: Voraussetzungen installieren

sudo apt update
sudo apt install -y git python3 python3-pip python3-venv build-essential texinfo

Schritt 2: RTEMS Tool "rtems-source-builder" (RSB) klonen
git clone https://git.rtems.org/rtems-source-builder.git
git clone https://gitlab.rtems.org/rtems-source-builder.git

cd rtems-source-builder
git submodule update --init


#1:
cd ~/quick-start/src/rsb/rtems/
cd $HOME/quick-start/src/rsb/rtems
#2:

#### besser:
../source-builder/sb-set-builder \
  --prefix=$HOME/quick-start/rtems/6 \
  --with-python-version=python3.12 \
  6/rtems-arm




# 3:build BPS:
# Target: arm/xilinx_zynq_a9_qemu:

../source-builder/sb-set-builder \
  --prefix=$HOME/quick-start/rtems/6 \
  --target=arm-rtems6 \
  --with-rtems-bsp=arm/xilinx_zynq_a9_qemu \
  --with-rtems-tests=yes \
  6/rtems-kernel

# Target: raspberrypi2:

  ../source-builder/sb-set-builder \
  --prefix=$HOME/quick-start/rtems/6 \
  --target=arm-rtems6 \
  --with-rtems-bsp=arm/raspberrypi2\
  6/rtems-kernel




# 4: Test:

export PATH=$HOME/quick-start/rtems/6/bin:$PATH

dann:
cd $HOME/quick-start/src/rtems

rtems-test --rtems-bsp=xilinx_zynq_a9_qemu build/arm/xilinx_zynq_a9_qemu







#3:Schritt 2 – Environment setzen
export PATH=$HOME/quick-start/rtems/6/bin:$PATH

#4:Schritt 3 – BSP jetzt bauen
cd $HOME/quick-start/src/rsb/rtems
../source-builder/sb-set-builder \
  --prefix=$HOME/quick-start/rtems/6 \
  --target=arm-rtems6 \
  --with-rtems-bsp=arm/xilinx_zynq_a9_qemu \
  --with-rtems-tests=yes \
  6/rtems-kernel





# 6:Build Your Application:


./waf configure --rtems=$HOME/quick-start/rtems/6 --rtems-bsp=arm/xilinx_zynq_a9_qemu

./waf

rtems-run --rtems-bsp=xilinx_zynq_a9_qemu build/arm-rtems6-xilinx_zynq_a9_qemu/matnr.exe



